<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- portfolio 관련 sql문 -->
<mapper namespace="portfolio"> 


	<!-- 포트폴리오 CRUD -->
	<insert id="insertPortfolio">
		INSERT INTO portfolio 
		VALUES (#{uname},portfolio_SEQ.nextval,#{pfname},
				sysdate,#{pfthumb},
				0,
				<choose><when test="pfurl != null">#{pfurl},</when><otherwise>null,</otherwise></choose>
				<choose><when test="pffile != null">#{pffile},</when><otherwise>null,</otherwise></choose>
				#{pfposition},#{tagname})
	</insert>
	
	<select id="portfolioView" resultType="Map"> 
		select p.uname, p.pfnum, p.pfposition, p.pfname,p.tagname, p.pfthumb,p.pffile,p.pfurl, p.pfread, u.uphoto, 
		(select count(*) from recommend rc where p.pfnum=rc.pfnum) as joa, (select count(*) from reply r where p.pfnum=r.pfnum) as replyNum
		from portfolio p inner join userList u on p.uname=u.uname where p.pfnum=#{pfnum}
	</select>
	
	<update id="updatePf">
		UPDATE portfolio SET pfname=#{pfname},pfthumb=#{pfthumb},pffile=#{pffile},pfurl=#{pfurl}, pfposition=#{pfposition}, tagname=#{tagname}  
			WHERE pfnum=#{pfnum}
	</update> 
	
	<select id="selectUpdate" resultType="portfolioVO">
		select pfname, pfthumb, pfurl, pffile, pfposition, tagname from portfolio
		where  pfnum = #{pfnum}
	</select>
	
	<delete id="deletePf">
		DELETE FROM portfolio WHERE pfnum=#{pfnum}
	</delete>
	
	<!-- 좋아요 기능 -->
	<insert id="insertRecommend">
		INSERT INTO recommend VALUES (#{pfnum},#{uname})
	</insert>
	
	<select id="distinctRecommend" resultType="int">
		SELECT count(*) FROM recommend WHERE pfnum=#{pfnum} AND uname=#{uname}
	</select>
	
	<select id="selectRecommend" resultType="int">
		SELECT count(*) FROM recommend WHERE pfnum=#{pfnum}
	</select>
	
	<delete id="deleteRecommend">
		DELETE FROM recommend WHERE pfnum=#{pfnum} AND uname=#{uname}	
	</delete>

	<!-- 검색 기능 -->
	<select id="portfolioList" resultType="Map"> 
		select p.uname, p.pfnum, p.pfname, SUBSTR(p.pfthumb, 1, INSTR(p.pfthumb, '|')-1) AS pfthumb, p.pfread, u.uphoto, (select count(*) from recommend rc where p.pfnum=rc.pfnum) as joa, (select count(*) from reply r where p.pfnum=r.pfnum) as replyNum
		from portfolio p, userList u 
		where p.uname=u.uname
		order by p.pfnum desc
	</select>
	
	<select id="searchKeyword" parameterType="String" resultType="Map">
		select distinct tagname, pfname  from portfolio 
		where tagname like #{keyword} or pfname like #{keyword}
		      <!-- and tagname not like '%#%' -->
	</select>
	
	<select id="searchTag" parameterType="String" resultType="String">
		select distinct tagname from portfolio 
		where tagname like #{keyword}
		and tagname like '%#%'
	</select>
	
	
	<select id="searchResult" resultType="Map"> 
		select distinct p.uname, p.pfnum, p.pfname, p.pfthumb, p.pfread, u.uphoto, (select count(*) from recommend rc where p.pfnum=rc.pfnum) as joa, (select count(*) from reply r where p.pfnum=r.pfnum) as replyNum
		from portfolio p, userList u 
		where p.uname=u.uname and REGEXP_LIKE(tagname, #{keyword}, 'i')
		order by p.pfnum desc
	</select>
	
	<select id="searchTagList" resultType="Map"> 
		select distinct p.uname, p.pfnum, p.pfname, p.pfthumb, p.pfread, u.uphoto, (select count(*) from recommend rc where p.pfnum=rc.pfnum) as joa, (select count(*) from reply r where p.pfnum=r.pfnum) as replyNum
		from portfolio p, userList u 
		where p.uname=u.uname and upper(tagname) like upper(#{keyword})
		order by p.pfnum desc
	</select>
	
	<select id="searchName" parameterType="String" resultType="String"> 
		select distinct p.pfname
		from portfolio p
		where p.pfname like #{keyword}
		order by p.pfname
	</select>

	<select id="searchNameList" parameterType="String" resultType="Map"> 
		select distinct p.uname, p.pfnum, p.pfname, p.pfthumb, p.pfread, u.uphoto, (select count(*) from recommend rc where p.pfnum=rc.pfnum) as joa, (select count(*) from reply r where p.pfnum=r.pfnum) as replyNum
		from portfolio p, userList u 
		where p.uname=u.uname and p.pfname like #{keyword}
		order by joa desc
	</select>
	
	<select id="selectUphoto" parameterType="String" resultType="String">
		select uphoto from userList where uname=#{uname}
	</select>
	
	<select id="selectMyportfolio" parameterType="String" resultType="Map">
		select p.uname, p.pfname, p.pfthumb, p.pfread, u.uphoto, (select count(*) from recommend rc where p.pfnum=rc.pfnum) as joa, (select count(*) from reply r where p.pfnum=r.pfnum) as replyNum
		from portfolio p, userList u 
		where p.uname=u.uname and p.uname=#{uname}
		order by pfdate desc
	</select>
	
	<!-- 메인 기능 -->
	<select id="mainPopular" resultType="Map"> 
		<![CDATA[
			select p.uname, p.pfnum, p.pfname, SUBSTR(p.pfthumb, 1, INSTR(p.pfthumb, '|')-1) AS pfthumb, p.pfread, u.uphoto,
            (select count(*) from recommend rc where p.pfnum=rc.pfnum) as joa, (select count(*) from reply r where p.pfnum=r.pfnum) as replyNum
			from portfolio p join (select  pfnum from recommend group by pfnum order by count(pfnum) desc) recommend on p.pfnum = recommend.pfnum 
            join userlist u on p.uname=u.uname where rownum<=3
		]]>
	</select>
	
	<select id = "recentPortfolio" resultType="Map"> 
		<![CDATA[
			select uname, pfnum, pfname,pfthumb, pfread, uphoto, joa, replyNum
			from
			(select p.uname, p.pfnum, p.pfname,SUBSTR(p.pfthumb, 1, INSTR(p.pfthumb, '|')-1) AS pfthumb, p.pfread, u.uphoto uphoto, (select count(*) from recommend rc where p.pfnum=rc.pfnum) as joa, (select count(*) from reply r where p.pfnum=r.pfnum) as replyNum
			from (select * from portfolio order by pfdate desc) p inner join userList u 
			on p.uname = u.uname
			order by p.pfdate desc)
			where rownum <= 3
		]]>
	</select>
	
	
</mapper>
